// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// zidm_bvs
List zidm_bvs(int iterations, int thin, arma::mat z, arma::mat x, arma::mat x_theta, arma::cube beta_gamma, arma::cube cc, arma::vec temp_uu, arma::cube eta, arma::cube eta_accept, List eta_index, arma::cube omega, arma::cube beta_theta, arma::cube zeta, arma::cube varphi, double sigma2_beta_gamma, double a_varphi, double b_varphi, double a_zeta, double b_zeta, double sigma2_beta_theta);
RcppExport SEXP _ZIDM_zidm_bvs(SEXP iterationsSEXP, SEXP thinSEXP, SEXP zSEXP, SEXP xSEXP, SEXP x_thetaSEXP, SEXP beta_gammaSEXP, SEXP ccSEXP, SEXP temp_uuSEXP, SEXP etaSEXP, SEXP eta_acceptSEXP, SEXP eta_indexSEXP, SEXP omegaSEXP, SEXP beta_thetaSEXP, SEXP zetaSEXP, SEXP varphiSEXP, SEXP sigma2_beta_gammaSEXP, SEXP a_varphiSEXP, SEXP b_varphiSEXP, SEXP a_zetaSEXP, SEXP b_zetaSEXP, SEXP sigma2_beta_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_theta(x_thetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta_gamma(beta_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type temp_uu(temp_uuSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta_accept(eta_acceptSEXP);
    Rcpp::traits::input_parameter< List >::type eta_index(eta_indexSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta_theta(beta_thetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type varphi(varphiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta_gamma(sigma2_beta_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type a_varphi(a_varphiSEXP);
    Rcpp::traits::input_parameter< double >::type b_varphi(b_varphiSEXP);
    Rcpp::traits::input_parameter< double >::type a_zeta(a_zetaSEXP);
    Rcpp::traits::input_parameter< double >::type b_zeta(b_zetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta_theta(sigma2_beta_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(zidm_bvs(iterations, thin, z, x, x_theta, beta_gamma, cc, temp_uu, eta, eta_accept, eta_index, omega, beta_theta, zeta, varphi, sigma2_beta_gamma, a_varphi, b_varphi, a_zeta, b_zeta, sigma2_beta_theta));
    return rcpp_result_gen;
END_RCPP
}
// zidm
List zidm(int iterations, int thin, arma::mat z, arma::mat x, arma::mat x_theta, arma::cube beta_gamma, arma::cube cc, arma::vec temp_uu, arma::cube eta, arma::cube eta_accept, List eta_index, arma::cube omega, arma::cube beta_theta, arma::cube zeta, arma::cube varphi, double sigma2_beta_gamma, double sigma2_beta_theta);
RcppExport SEXP _ZIDM_zidm(SEXP iterationsSEXP, SEXP thinSEXP, SEXP zSEXP, SEXP xSEXP, SEXP x_thetaSEXP, SEXP beta_gammaSEXP, SEXP ccSEXP, SEXP temp_uuSEXP, SEXP etaSEXP, SEXP eta_acceptSEXP, SEXP eta_indexSEXP, SEXP omegaSEXP, SEXP beta_thetaSEXP, SEXP zetaSEXP, SEXP varphiSEXP, SEXP sigma2_beta_gammaSEXP, SEXP sigma2_beta_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_theta(x_thetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta_gamma(beta_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type temp_uu(temp_uuSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta_accept(eta_acceptSEXP);
    Rcpp::traits::input_parameter< List >::type eta_index(eta_indexSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta_theta(beta_thetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type varphi(varphiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta_gamma(sigma2_beta_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta_theta(sigma2_beta_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(zidm(iterations, thin, z, x, x_theta, beta_gamma, cc, temp_uu, eta, eta_accept, eta_index, omega, beta_theta, zeta, varphi, sigma2_beta_gamma, sigma2_beta_theta));
    return rcpp_result_gen;
END_RCPP
}
// dm_bvs
List dm_bvs(int iterations, int thin, arma::mat z, arma::mat x, arma::cube beta_gamma, arma::cube cc, arma::vec temp_uu, arma::cube eta, List eta_index, arma::cube varphi, double sigma2_beta_gamma, double a_varphi, double b_varphi);
RcppExport SEXP _ZIDM_dm_bvs(SEXP iterationsSEXP, SEXP thinSEXP, SEXP zSEXP, SEXP xSEXP, SEXP beta_gammaSEXP, SEXP ccSEXP, SEXP temp_uuSEXP, SEXP etaSEXP, SEXP eta_indexSEXP, SEXP varphiSEXP, SEXP sigma2_beta_gammaSEXP, SEXP a_varphiSEXP, SEXP b_varphiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta_gamma(beta_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type temp_uu(temp_uuSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< List >::type eta_index(eta_indexSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type varphi(varphiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta_gamma(sigma2_beta_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type a_varphi(a_varphiSEXP);
    Rcpp::traits::input_parameter< double >::type b_varphi(b_varphiSEXP);
    rcpp_result_gen = Rcpp::wrap(dm_bvs(iterations, thin, z, x, beta_gamma, cc, temp_uu, eta, eta_index, varphi, sigma2_beta_gamma, a_varphi, b_varphi));
    return rcpp_result_gen;
END_RCPP
}
// dm
List dm(int iterations, int thin, arma::mat z, arma::mat x, arma::cube beta_gamma, arma::cube cc, arma::vec temp_uu, arma::cube eta, List eta_index, arma::cube varphi, double sigma2_beta_gamma);
RcppExport SEXP _ZIDM_dm(SEXP iterationsSEXP, SEXP thinSEXP, SEXP zSEXP, SEXP xSEXP, SEXP beta_gammaSEXP, SEXP ccSEXP, SEXP temp_uuSEXP, SEXP etaSEXP, SEXP eta_indexSEXP, SEXP varphiSEXP, SEXP sigma2_beta_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta_gamma(beta_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type temp_uu(temp_uuSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< List >::type eta_index(eta_indexSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type varphi(varphiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta_gamma(sigma2_beta_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(dm(iterations, thin, z, x, beta_gamma, cc, temp_uu, eta, eta_index, varphi, sigma2_beta_gamma));
    return rcpp_result_gen;
END_RCPP
}
// tuyl
arma::cube tuyl(int iterations, arma::mat z);
RcppExport SEXP _ZIDM_tuyl(SEXP iterationsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(tuyl(iterations, z));
    return rcpp_result_gen;
END_RCPP
}
// tuyl_meaner
arma::mat tuyl_meaner(arma::mat z);
RcppExport SEXP _ZIDM_tuyl_meaner(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(tuyl_meaner(z));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ZIDM_zidm_bvs", (DL_FUNC) &_ZIDM_zidm_bvs, 21},
    {"_ZIDM_zidm", (DL_FUNC) &_ZIDM_zidm, 17},
    {"_ZIDM_dm_bvs", (DL_FUNC) &_ZIDM_dm_bvs, 13},
    {"_ZIDM_dm", (DL_FUNC) &_ZIDM_dm, 11},
    {"_ZIDM_tuyl", (DL_FUNC) &_ZIDM_tuyl, 2},
    {"_ZIDM_tuyl_meaner", (DL_FUNC) &_ZIDM_tuyl_meaner, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_ZIDM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
